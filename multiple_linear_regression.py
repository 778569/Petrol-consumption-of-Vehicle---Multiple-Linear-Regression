# -*- coding: utf-8 -*-
"""Multiple Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15zZpZ1yoXoMBAsoC7Bi3oRHGxMQDhyQV
"""

import numpy as np
import pandas as pd

df = pd.read_csv('petrol_consumption.csv')

df.head()

df.shape

df.describe().round(2).T

from matplotlib import pyplot as plt

plt.figure(figsize=(6,4))
plt.plot(df['Petrol_tax'], df['Petrol_Consumption'],'ro')
plt.title('Petrol_tax vs Petrol_Consumption')
plt.xlabel('Petrol_tax')
plt.ylabel('Petrol_Consumption')

plt.show()

plt.figure(figsize=(6,4))
plt.plot(df['Average_income'], df['Petrol_Consumption'],'ro')
plt.title('Average_income vs Petrol_Consumption')
plt.xlabel('Average_income')
plt.ylabel('Petrol_Consumption')

plt.show()

Y = df['Petrol_Consumption']
X = df[['Average_income', 'Paved_Highways','Population_Driver_licence(%)','Petrol_tax']]

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()
regressor.fit(X_train, y_train)

regressor.intercept_

regressor.coef_

y_pred = regressor.predict(X_test)

results = pd.DataFrame({'Actual' : y_test , 'Predicted': y_pred})
print(results)

from sklearn.metrics import mean_absolute_error, mean_squared_error

MAE = mean_absolute_error(y_test,y_pred)
MSE = mean_squared_error(y_test,y_pred)
RMSE = np.sqrt(MSE)

print(f'Mean absolute error : {MAE:.2f}')
print(f'Mean squared error : {MSE:.2f}')
print(f'Root Mean squared error : {RMSE:.2f}')

regressor.score(X_test, y_test)

regressor.score(X_train, y_train)